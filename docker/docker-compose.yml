version: '3.8'

services:
  nanoquant-enterprise-api:
    build: .
    container_name: nanoquant-enterprise-api
    ports:
      - "8001:8001"  # Enterprise API
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
      - RAZORPAY_KEY_SECRET=${RAZORPAY_KEY_SECRET}
      - PAYPAL_CLIENT_ID=${PAYPAL_CLIENT_ID}
      - PAYPAL_CLIENT_SECRET=${PAYPAL_CLIENT_SECRET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
    deploy:
      resources:
        limits:
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    command: ["python", "-m", "nanoquant.api.enterprise_endpoints"]

  nanoquant-admin:
    build: .
    container_name: nanoquant-admin
    ports:
      - "8502:8502"  # Admin Dashboard
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
    deploy:
      resources:
        limits:
          memory: 1G
    restart: unless-stopped
    command: ["streamlit", "run", "nanoquant/admin/dashboard.py"]

  redis:
    image: redis:alpine
    container_name: nanoquant-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M

  postgres:
    image: postgres:13
    container_name: nanoquant-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=nanoquant
      - POSTGRES_USER=nanoquant
      - POSTGRES_PASSWORD=nanoquant123
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G

  nginx:
    image: nginx:alpine
    container_name: nanoquant-enterprise-proxy
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - nanoquant-enterprise-api
      - nanoquant-admin
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M

volumes:
  redis-data:
  postgres-data: